# Pre-commit hooks para el proyecto
# Instalar: pre-commit install
# Ejecutar manualmente: pre-commit run --all-files

repos:
  # Hooks generales
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        name: Eliminar espacios en blanco al final
      - id: end-of-file-fixer
        name: Asegurar nueva línea al final
      - id: check-yaml
        name: Validar YAML
      - id: check-json
        name: Validar JSON
      - id: check-added-large-files
        name: Detectar archivos grandes
        args: ['--maxkb=1000']
      - id: check-merge-conflict
        name: Detectar marcadores de merge
      - id: detect-private-key
        name: Detectar llaves privadas
      - id: mixed-line-ending
        name: Verificar fin de línea

  # Black - formateo de código
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        name: Formatear con Black
        language_version: python3.11
        args: ['--line-length=120']

  # isort - ordenar imports
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: Ordenar imports
        args: ['--profile', 'black']

  # Flake8 - linting
  - repo: https://github.com/PyCQA/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        name: Lint con Flake8
        args: ['--max-line-length=120', '--extend-ignore=E203,W503']

  # Detección de secretos con gitleaks
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.18.1
    hooks:
      - id: gitleaks
        name: Detectar secretos con gitleaks
        # No bloqueante en fase inicial (comentar para hacer bloqueante)
        # stages: [commit]
        verbose: true

  # Terraform formatting
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.86.0
    hooks:
      - id: terraform_fmt
        name: Formatear Terraform
      - id: terraform_validate
        name: Validar Terraform
        args:
          - --hook-config=--retry-once-with-cleanup=true
      - id: terraform_tflint
        name: Lint Terraform con tflint
        args:
          - --args=--config=__GIT_WORKING_DIR__/.tflint.hcl

  # Validar mensajes de commit (Conventional Commits)
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.0.0
    hooks:
      - id: conventional-pre-commit
        name: Validar mensaje de commit
        stages: [commit-msg]
        args: ['--force-scope']

# Configuración global
default_language_version:
  python: python3.11

# Fail fast: detener en el primer error
fail_fast: false

# Minimum pre-commit version
minimum_pre_commit_version: '3.0.0'